# user  nobody;
# Defines which Linux system user will own and run the Nginx server

worker_processes  4;

events {
    worker_connections  64;
    # worker_processes and worker_connections allows you to calculate maxclients value:
    # max_clients = worker_processes * worker_connections
}

http {
    include       mime.types;
    # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

    default_type  application/octet-stream;

    sendfile        on;

    # tells the server to use on-the-fly gzip compression.
    limit_req_zone  $binary_remote_addr  zone=default:10m   rate=5r/s;

    ssl_protocols       TLSv1.2;
    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers  on;
    ssl_stapling on;
    ssl_stapling_verify on;
    # ssl_dhparam /etc/ssl/dhparam.pem;
    ssl_ecdh_curve secp384r1;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    upstream v2-server {
        server v2-server:1080;
    }

    server {
        listen 80;
        listen 443 ssl http2;
        listen 1080;
        listen 1443-1448 ssl http2;
        listen [::]:80;
        listen [::]:443	ssl http2;
        listen [::]:10080;
        listen [::]:10443-10448 ssl http2;
        server_name <ReplaceMe-YourVPSAddress>;

        ssl_certificate      /etc/certificates/live/$ssl_server_name/fullchain.pem;
        ssl_certificate_key  /etc/certificates/live/$ssl_server_name/privkey.pem;

        root /var/www/;

        location /graphql {
            limit_req zone=default burst=20;
            proxy_pass http://v2-server;
            proxy_redirect   off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    server {
        listen 3000 default_server;
        listen [::]:3000 default_server;
        server_name _;

        location /graphql {
            limit_req zone=default burst=20;
            proxy_pass http://v2-server;
            proxy_redirect   off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
